# Configuration for Alacritty, the GPU enhanced terminal emulator.
import:
  - "~/.config/alacritty/theme/GruvboxDarkHard.yml"

# Setup term for programs to be able to use it
env:
  # TERM: alacritty
  TERM: xterm-256color

window:
  # Window dimensions (changes require restart)
  #
  # Number of lines/columns (not pixels) in the terminal. Both lines and columns
  # must be non-zero for this to take effect. The number of columns must be at
  # least `2`, while using a value of `0` for columns and lines will fall back
  # to the window manager's recommended size
  #dimensions:
  #  columns: 0
  #  lines: 0

  # Window position (changes require restart)
  #
  # Specified in number of pixels.
  # If the position is not set, the window manager will handle the placement.
  #position:
  #  x: 0
  #  y: 0

  # Window padding (changes require restart)
  #
  # Blank space added around the window in pixels. This padding is scaled
  # by DPI and the specified value is always added at both opposing sides.
  #padding:
  #  x: 0
  #  y: 0

  # Spread additional padding evenly around the terminal content.
  #dynamic_padding: false

  # Window decorations
  #
  # Values for `decorations`:
  #     - full: Borders and title bar
  #     - none: Neither borders nor title bar
  #
  # Values for `decorations` (macOS only):
  #     - transparent: Title bar, transparent background and title bar buttons
  #     - buttonless: Title bar, transparent background and no title bar buttons
  decorations: full

  # Background opacity
  #
  # Window opacity as a floating point number from `0.0` to `1.0`.
  # The value `0.0` is completely transparent and `1.0` is opaque.
  opacity: 0.9

  # Startup Mode (changes require restart)
  #
  # Values for `startup_mode`:
  #   - Windowed
  #   - Maximized
  #   - Fullscreen
  #
  # Values for `startup_mode` (macOS only):
  #   - SimpleFullscreen
  startup_mode: Windowed

  # Window title
  #title: Alacritty

  # Allow terminal applications to change Alacritty's window title.
  dynamic_title: true

  # Window class (Linux/BSD only):
  #class:
  # Application instance name
  #instance: Alacritty
  # General application class
  #general: Alacritty

  # Decorations theme variant
  #
  # Override the variant of the System theme/GTK theme/Wayland client side
  # decorations. Commonly supported values are `Dark`, `Light`, and `None` for
  # auto pick-up. Set this to `None` to use the default theme variant.
  #decorations_theme_variant: None

  # Resize increments
  #
  # Prefer resizing window by discrete steps equal to cell dimensions.
  #resize_increments: false

  # Make `Option` key behave as `Alt` (macOS only):
  #   - OnlyLeft
  #   - OnlyRight
  #   - Both
  #   - None (default)
  #option_as_alt: None

  #scrolling:
  # Maximum number of lines in the scrollback buffer.
  # Specifying '0' will disable scrolling.
  #history: 10000

  # Scrolling distance multiplier.
  #multiplier: 3

# Sample Font configuration for font: Monoid.
# Feel free to use different font configuration family & face for each sections
font:
  # Normal font face - Also used to draw glyphs on tmux & VIM
  # NOTE: You may use any font you'd like but make sure the normal fonts
  # support ligatures/glyphs. That's used by tmux & VIM to provide a better
  # UI for powerline & tmux bottom bar.
  normal:
    # Font name
    family: FiraCode Nerd Font
    # Font face
    style: Retina

  # Bold font face
  bold:
    family: FiraCode Nerd Font
    style: Bold

  # Italic font face
  italic:
    family: FiraCode Nerd Font
    style: Italic

  # Bold italic font face
  # Note: Since i don't have a font italic version of this font, I just specified
  # italic & it just works. You may specfiy the bold italic version if it exists
  # for your font
  bold_italic:
    family: FiraCode Nerd Font
    style: Italic

  # Font size
  size: 17.0

  # Offset is the extra space around each character. `offset.y` can be thought of
  # as modifying the line spacing, and `offset.x` as modifying the letter spacing
  # I've given in 14 spacing which fits really well with my fonts, you may change it
  # to your convenience but make sure to adjust 'glyph_offset' appropriately post that
  # offset:
  #  x: 0
  #  y: 14

  # Glyph offset determines the locations of the glyphs within their cells with
  # the default being at the bottom. Increasing `x` moves the glyph to the
  # right, increasing `y` moves the glyph upward.
  #glyph_offset:
  #  x: 0
  #  y: 0

  # Use built-in font for box drawing characters.
  #
  # If `true`, Alacritty will use a custom built-in font for box drawing
  # characters (Unicode points 2500 - 259f).
  #
  #builtin_box_drawing: true
  # If `true`, bold text is drawn using the bright color variants.
draw_bold_text_with_bright_colors: true

# Live config reload (changes require restart)
live_config_reload: true

selection:
  # This string contains all characters that are used as separators for
  # "semantic words" in Alacritty.
  #semantic_escape_chars: ",│`|:\"' ()[]{}<>\t"

  # When set to `true`, selected text will be copied to the primary clipboard.
  save_to_clipboard: false

cursor:
  # Cursor style
  # style:
  # Cursor shape
  #
  # Values for `shape`:
  #   - ▇ Block
  #   - _ Underline
  #   - | Beam
  shape: Beam

  # Cursor blinking state
  #
  # Values for `blinking`:
  #   - Never: Prevent the cursor from ever blinking
  #   - Off: Disable blinking by default
  #   - On: Enable blinking by default
  #   - Always: Force the cursor to always blink
  blinking: Off

  # Vi mode cursor style
  #
  # If the vi mode cursor style is `None` or not specified, it will fall back to
  # the style of the active value of the normal cursor.
  #
  # See `cursor.style` for available options.
  #vi_mode_style: None

  # Cursor blinking interval in milliseconds.
  #blink_interval: 750

  # Time after which cursor stops blinking, in seconds.
  #
  # Specifying '0' will disable timeout for blinking.
  #blink_timeout: 5

  # If this is `true`, the cursor will be rendered as a hollow box when the
  # window is not focused.
  #unfocused_hollow: true

  # Thickness of the cursor relative to the cell width as floating point number
  # from `0.0` to `1.0`.
  #thickness: 0.15

  # Live config reload (changes require restart)
  #live_config_reload: true

# Shell
#
# You can set `shell.program` to the path of your favorite shell, e.g.
# `/bin/fish`. Entries in `shell.args` are passed unmodified as arguments to the
# shell.
#
# Default:
#   - (Linux/BSD/macOS) `$SHELL` or the user's login shell, if `$SHELL` is unset
#   - (Windows) powershell
shell:
  program: /bin/zsh
  args:
    - --login

# Startup directory
#
# Directory the shell is started in. If this is unset, or `None`, the working
# directory of the parent process will be used.
#working_directory: None

# Offer IPC using `alacritty msg` (unix only)
#ipc_socket: true

#mouse:
# Click settings
#
# The `double_click` and `triple_click` settings control the time
# alacritty should wait for accepting multiple clicks as one double
# or triple click.
#double_click: { threshold: 300 }
#triple_click: { threshold: 300 }

# If this is `true`, the cursor is temporarily hidden when typing.
#hide_when_typing: false

# Setup some amazing custom key bindings here - Best thing is you can setup key bindings
# using Mac's 'command' to control your tmux.
# A great reference: https://arslan.io/2018/02/05/gpu-accelerated-terminal-alacritty/#make-alacritty-feel-like-iterm2
key_bindings:
  - { key: V, mods: Command, action: Paste }
  - { key: C, mods: Command, action: Copy }
  - { key: Q, mods: Command, action: Quit }
  - { key: N, mods: Command, action: SpawnNewInstance }
  - { key: Return, mods: Command, action: ToggleFullscreen }

  - { key: Equals, mods: Command, action: IncreaseFontSize }
  - { key: Minus, mods: Command, action: DecreaseFontSize }
  - { key: Minus, mods: Command|Shift, action: ResetFontSize }

  # shortcuts for tmux.
  - { key: D, mods: Command, chars: "\x18d" } # detach tmux
  - { key: W, mods: Command, chars: "\x18&" } # close tab (kill)
  - { key: T, mods: Command, chars: "\x18c" } # new tab
  - { key: RBracket, mods: Command|Shift, chars: "\x18o" } # select next pane
  - { key: LBracket, mods: Command|Shift, chars: "\x18;" } # select last (previously used) pane
  - { key: RBracket, mods: Command, chars: "\x18n" } # select next tab
  - { key: LBracket, mods: Command, chars: "\x18p" } # select previous tab
  - { key: D, mods: Command|Shift, chars: "\x18\x73" } # show panels
  - { key: H, mods: Command, chars: "\x18\x68" } # window movement
  - { key: J, mods: Command, chars: "\x18\x6a" } # window movement
  - { key: K, mods: Command, chars: "\x18\x6b" } # window movement
  - { key: L, mods: Command, chars: "\x18\x6c" } # window movement
  - { key: Key1, mods: Command, chars: "\x18\x31" }
  - { key: Key2, mods: Command, chars: "\x18\x32" }
  - { key: Key3, mods: Command, chars: "\x18\x33" }
  - { key: Key4, mods: Command, chars: "\x18\x34" }
  - { key: Key5, mods: Command, chars: "\x18\x35" }
  - { key: Key6, mods: Command, chars: "\x18\x36" }
  - { key: Key7, mods: Command, chars: "\x18\x37" }
  - { key: Key8, mods: Command, chars: "\x18\x38" }
  - { key: Key9, mods: Command, chars: "\x18\x39" }
  - { key: Left, mods: Command, chars: "\x18\x48" } # make window left grow
  - { key: Down, mods: Command, chars: "\x18\x4a" } # make window down grow
  - { key: Up, mods: Command, chars: "\x18\x4b" } # make window up grow
  - { key: Right, mods: Command, chars: "\x18\x4c" } # make window right grow
